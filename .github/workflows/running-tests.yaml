name: 🏃 tests

on:
    push:
        branches:
            - '*'
        tags:
            - '*'
    pull_request:
        types: [ opened, edited ]
    schedule:
        -   cron: '*/42 4 * * *'


env:
    extensionKey: my_skeleton
    typo3DatabaseHost: localhost
    typo3DatabaseName: typo3
    typo3DatabaseUsername: root
    typo3DatabasePassword: password

jobs:
    running-stable-tests:
        runs-on: ubuntu-latest
        services:
            mysql:
                image: mysql:5.7
                env:
                    MYSQL_ALLOW_EMPTY_PASSWORD: false
                    MYSQL_DATABASE: ${{ env.typo3DatabaseName }}
                    MYSQL_ROOT_PASSWORD: ${{ env.typo3DatabasePassword }}
                ports:
                    - 3306
        strategy:
            fail-fast: false
            matrix:
                php: [ '7.4', '7.3', '7.2' ]
                typo3: [ '^9.5', '^10.4' ]
        steps:
            -   uses: actions/checkout@v2
            -   uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php }}
                    tools: composer:v2
            -   name: install
                run: |
                    composer require --no-progress --no-suggest --no-update nimut/typo3-complete:"${{ matrix.typo3 }}"
                    composer update
                    git checkout composer.json
            -   name: prepare
                run: |
                    mkdir -p .Build/public/typo3conf/ext/
                    if [ ! -L .Build/public/typo3conf/ext/${{ env.extensionKey }} ]; then ln -snvf ../../../../. .Build/public/typo3conf/ext/${{ env.extensionKey }}; fi
            -   name: unit tests
                run: |
                    if [ -d "Tests/Unit" ]; then
                        .Build/bin/phpunit --bootstrap .Build/vendor/nimut/testing-framework/res/Configuration/UnitTestsBootstrap.php --testsuite unit;
                    fi
            -   name: functional tests
                run: |
                    if [ -d "Tests/Functional" ]; then
                        find 'Tests/Functional' -wholename '*Test.php' | parallel --gnu 'echo; echo "Running functional test suite {}"; .Build/bin/phpunit --bootstrap .Build/vendor/nimut/testing-framework/res/Configuration/FunctionalTestsBootstrap.php {}';
                    fi
            -   name: php lint
                run: |
                    find . -name \*.php ! -path "./.Build/*" | parallel --gnu php -d display_errors=stderr -l {} > /dev/null \;;
